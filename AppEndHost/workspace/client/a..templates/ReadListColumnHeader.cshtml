@using AppEndServer
@using AppEndDbIO
@using AppEndCommon
@using System.Linq.Expressions
@using Newtonsoft
@using Newtonsoft.Json
@using RazorEngine.Text

@{
    string dbConfName = Model.DbDialog.DbConfName.ToStringEmpty();
    string dbDialogName = (string)Model.Parameters["DbDialogName"];
    string renderHint = (string)Model.Parameters["RenderHint"];
    string colClasses = (string)Model.Parameters["ColumnClasses"];
    string colName = (string)Model.Parameters["ColumnName"];
    DbQueryColumn? dbQueryColumn = (DbQueryColumn?)Model.Parameters["Column"];

    DbDialog dbd = DbDialog.Load(AppEndSettings.ServerObjectsPath, dbConfName, dbDialogName);

    string objectName = dbd.ObjectName.ToStringEmpty();

    DbColumn? dbColumn = dbQueryColumn is null || dbQueryColumn.Name is null ? null : dbd.GetColumnIfExists(dbQueryColumn.Name);
    string colStyle = dbColumn?.IsPrimaryKey == true || dbColumn?.DbType.ToLower() == "bit" || dbColumn?.IsNumerical() == true || renderHint == "image" || colName == "Auditing"
        ? "width:75px;overflow: hidden;text-overflow: ellipsis;" : "min-width:185px;";
    if (colName.IsNullOrEmpty()) colName = dbColumn is null ? (dbQueryColumn is null ? "" : dbQueryColumn.As.ToStringEmpty()) : dbColumn.Name;

    List<string> classes = new List<string>();
    if (renderHint == "pk" || renderHint == "humanid") classes.AddIfNotContains("fb");
    if (renderHint == "pk" || colName == "Auditing")
    {
        classes.AddIfNotContains("text-primary");
        classes.AddIfNotContains("fw-bold");
        classes.AddIfNotContains("text-center");
    }
    if (renderHint == "humanid") classes.AddIfNotContains("text-success");
    if (dbColumn is not null)
    {
        if (dbColumn.DbType.ToLower() == "bit" || dbColumn.DbType.ToLower() == "image" || dbColumn.IsNumerical()) classes.AddIfNotContains("text-center");
        if (dbColumn.Name.ToLower().Contains("number")) classes.AddIfNotContains("text-center");
        if (dbColumn.Name.ToLower().Contains("code")) classes.AddIfNotContains("text-center");
    }
    colClasses = string.Join(' ', classes.ToArray());

}

@if (renderHint == "pk")
{
    @if (colName != "")
    {
        @if (dbd.OpenChangeStatePlace.ToString() == "InlineDialog" || dbd.OpenChangeStatePlace.ToString() == "Both")
        {
            <th class="sticky-top ae-thead-th @colClasses" style="@colStyle">
                <i class="fa-solid fa-fw fa-window-restore"></i>
            </th>
        }
        @if (dbd.OpenChangeStatePlace.ToString() == "NewWindow" || dbd.OpenChangeStatePlace.ToString() == "Both")
        {
            <th class="sticky-top ae-thead-th @colClasses" style="@colStyle">
                <div><i class="fa-solid fa-link fa-fw"></i></div>
            </th>
        }
    }
}
else
{
    <th class="sticky-top ae-thead-th @colClasses" style="@colStyle">
        <div>{{shared.translate("@(colName.ReplaceSafe("_FileBody_xs", ""))")}}</div>
    </th>
}
